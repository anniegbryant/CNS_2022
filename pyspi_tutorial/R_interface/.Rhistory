knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
library(tidyverse)
library(reticulate)
use_python("/home/osboxes/anaconda3/bin/python3")
source_python("pickle_reader.py")
library(tidyverse)
library(reticulate)
use_python("/home/osboxes/anaconda3/bin/python3")
source_python("pickle_reader.py")
study <- "/media/sf_Shared_Folder/PhD_work/"
pydata_path <- paste0(study, "data/scz/UCLA/pydata/AROMA_2P/")
# Load subject metadata
subject_csv <- read.csv(paste0(study, "data/scz/UCLA/participants.csv"))
if (!file.exists(paste0(pydata_path, "UCLA_AROMA_2P_pyspi_res.Rds"))) {
pyspi_data_AROMA_2P_list <- list()
for (subject in unique(list.dirs(pydata_path, recursive = F, full.names = F))) {
subject_pkl <- extract_df_from_pkl(paste0(pydata_path, subject, "/calc.pkl")) %>%
mutate(Subject_ID = subject,
group = subset(subject_csv, sampleID == subject) %>% pull(diagnosis))
pyspi_data_AROMA_2P_list <- rlist::list.append(pyspi_data_AROMA_2P_list,
subject_pkl)
}
pyspi_data_AROMA_2P <- do.call(plyr::rbind.fill, pyspi_data_AROMA_2P_list)
corr_data <- subset(pyspi_data_AROMA_2P, SPI == "xcorr_mean_sig-True")
saveRDS(pyspi_data_AROMA_2P, file = paste0(pydata_path, "UCLA_AROMA_2P_pyspi_res.Rds"))
saveRDS(corr_data, file = paste0(pydata_path, "UCLA_AROMA_2P_pyspi_xcorr.Rds"))
} else {
corr_data <- readRDS(paste0(pydata_path, "UCLA_AROMA_2P_pyspi_xcorr.Rds"))
}
n
# TODO: convert to argparse
python_to_use <- "/home/osboxes/anaconda3/envs/pyspi/bin/python3"
reticulate::use_python(python_to_use)
set.seed(127)
github_dir <- "/media/sf_Shared_Folder/github/fMRI_FeaturesDisorders/"
study <- "/media/sf_Shared_Folder/PhD_work/"
data_path <- paste0(study, "data/scz/UCLA/")
pydata_path <- paste0(study, "data/scz/UCLA/pydata/")
output_data_path <- paste0(study, "data/scz/UCLA/pydata/R_files/")
# load libraries
library(theft)
library(tidyverse)
library(cowplot)
library(reticulate)
source_python(paste0(github_dir, "helper_functions/pickle_reader.py"))
theme_set(theme_cowplot())
# Load subject metadata
subject_csv <- read.csv(paste0(data_path, "participants.csv"))
noise_procs = c("AROMA+2P",
"AROMA+2P+GMR",
"AROMA+2P+DiCER")
source(paste0(github_dir, "helper_functions/pyspi_functions.R"))
input_dataset_name = "UCLA"
merge_pyspi_res_for_study(data_path = pydata_path,
input_dataset_name = input_dataset_name,
noise_procs = noise_procs)
knitr::opts_chunk$set(echo = TRUE, message = F, warning = F)
python_to_use <- "/home/osboxes/anaconda3/envs/pyspi/bin/python3"
reticulate::use_python(python_to_use)
library(tidyverse)
library(reticulate)
library(knitr)
library(kableExtra)
library(cowplot)
theme_set(theme_cowplot())
source_python("../pickle_reader_for_R.py")
source_python("pickle_reader_for_R.py")
pyspi_data <- extract_df_from_pkl("../tutorial_example_data/pyspi_calc_table.pkl")
setwd("/media/sf_Shared_Folder/github/CNS_2022/pyspi_tutorial/R_interface")
pyspi_data <- extract_df_from_pkl("../tutorial_example_data/pyspi_calc_table.pkl")
pyspi_data <- extract_df_from_pkl("../tutorial_example_data/pyspi_calc_set1_table.pkl")
head(pyspi_data)
pyspi_data$value <- as.numeric(pyspi_data$value)
head(pyspi_data)
ROI_info <- read.csv("tutorial_example_data/ROI_info.csv")
ROI_info <- read.csv("../tutorial_example_data/ROI_info.csv")
ROI_info <- data.frame(Index = 1:4,
ROI = c("ROI1", "ROI2", "ROI3", "ROI4"))
ROI_info <- data.frame(Index = 0:3,
ROI = c("ROI1", "ROI2", "ROI3", "ROI4"))
pyspi_data <- pyspi_data %>%
# Convert Variable_1 and Variable_2 to indices to be joined with ROI_info table
mutate(Variable_1 = as.numeric(str_replace_all(Variable_1, "proc-", "")),
Variable_2 = as.numeric(str_replace_all(Variable_2, "proc-", ""))) %>%
# Join on the first variable
left_join(., ROI_info, by=c("Variable_1" = "Index")) %>%
dplyr::rename("Brain_Region_1" = "ROI") %>%
# Join on the second variable
left_join(., ROI_info, by=c("Variable_2" = "Index")) %>%
dplyr::rename("Brain_Region_2" = "ROI") %>%
dplyr::select(-Variable_1, -Variable_2)
head(pyspi_data)
pyspi_data %>%
filter(SPI == "cov_EmpiricalCovariance") %>%
ggplot(data=., mapping=aes(x=Brain_Region_1, y=Brain_Region_2, fill=value)) +
geom_tile() +
ylab("Brain Region") +
xlab("Brain Region") +
ggtitle("Pearson Correlation for BOLD fMRI\nDynamcis Across Brain Regions") +
labs(fill = "Pearson\nCorrelation") +
scale_fill_gradient(low="white", high="red", na.value="gray80") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.4),
plot.title = element_text(hjust=0.5))
pyspi_data %>%
filter(SPI == "cov_EmpiricalCovariance") %>%
ggplot(data=., mapping=aes(x=Brain_Region_1, y=Brain_Region_2, fill=value)) +
geom_tile() +
ylab("Brain Region") +
xlab("Brain Region") +
ggtitle("Pearson Correlation for BOLD fMRI\nDynamcis Across Brain Regions") +
labs(fill = "Pearson\nCorrelation") +
scale_fill_gradient2(low="blue", mid="white", high="red", na.value="gray80") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.4),
plot.title = element_text(hjust=0.5))
View(pyspi_data)
